## Gamma Family {#sec-energy-intro .unnumbered}

### Risk Distribution Function

Our risk is governed by a probability density function $f$ with an unknown parameter $θ$. We want to choose a family of distributions that satisfies the following properties:

-   Supports strictly positive values (i.e., $x > 0$)
-   Is not necessarily bounded by 1 (we can truncate later, if needed)
-   Is continuous
-   Can be aggregated (under sum or average)
-   Has a center of mass that may lie near zero or at some $x$ between 0 and 1

By **aggregation** we mean taking the sum or the mean of multiple independent random variables of $f$.

In light of actuarial and agronomic considerations, we select the **Gamma family** for $f$.

\

### Gamma Family

The Gamma family is convenient because it naturally arises as the aggregation of exponential components. Specifically:

1.  The sum of $k$ independent $Exp(λ=1/θ)$ variables follows an $Erlang(k, θ)$ distribution
2.  An $Erlang(k, θ)$ is equivalent to $Gamma(α = k, θ)$ for k strictly integer
3.  An $Exp(1/θ)$ is a special case of $Gamma(α = 1, θ)$
4.  More generally, if we hypothesize that the atomic risk follows $Gamma(α, θ)$ with shape parameter $α$ and scale $θ$, then the **sum** of $k$ independent copies of that atomic risk unit satisfies:

$$k * Gamma(α, θ)\Longrightarrow Gamma(α*k, θ)$$


### Visual Illustration

Below we provide a visual comparison of the exponential and Erlang (a special case of Gamma) distributions under the same scale parameter $θ = 0.3$:

These plots illustrate how summing or averaging exponential/Gamma variables shifts and reshapes the density.

```{r, fig.height=4, fig.width=8}
#| warning: false
#| eval: true
#| echo: false
#| message: false
library(here)
invisible(capture.output(source(here("scripts", "global.R"))))
invisible(capture.output(source(here("scripts", "helpers.R"))))
x_vals <- seq(0, 10, length.out = 500)
combined_df <- data.frame(
  x = rep(x_vals, times = 2),
  density = c(
    dexp(x_vals, rate = 1/0.3),
    dgamma(x_vals, shape = 3, scale = 0.3)
  ),
  dist = factor(
    rep(c("Exponential(λ=1/θ)",
          "Erlang(shape=3, scale=θ)"),
        each = length(x_vals))
  )
)

ggplot(combined_df, aes(x = x, y = density, color = dist)) +
  geom_line(size = 1) +
  scale_color_manual(
    values = c(
      "Exponential(λ=1/θ)" = "darkblue",
      "Erlang(shape=3, scale=θ)" = "orange"

    )
  ) +
  labs(
    title = "Exponential and Erlang with same scale θ=0.3",
    x = "x",
    y = "Density",
    color = "Distribution"
  ) +
  theme_minimal(base_size = 13)
```

```{r, fig.height=4, fig.width=8}
#| warning: false
#| eval: true
#| echo: false
#| message: false

x_vals <- seq(0, 10, length.out = 500)
combined_df <- data.frame(
  x = rep(x_vals, times = 2),
  density = c(
    dgamma(x_vals, shape = 1.5, scale = 0.3),

    dgamma(x_vals, shape = 3*1.5, scale = 0.3)
  ),
  dist = factor(
    rep(c("Gamma(α, scale=θ)",
          "Gamma(3α, scale=θ)"),
        each = length(x_vals))
  )
)

ggplot(combined_df, aes(x = x, y = density, color = dist)) +
  geom_line(size = 1) +
  scale_color_manual(
    values = c(
      "Gamma(α, scale=θ)" = "darkblue",
      "Gamma(3α, scale=θ)" = "orange"

    )
  ) +
  labs(
    title = "Gamma and Summed Gamma with same scale θ=0.3",
    x = "x",
    y = "Density",
    color = "Distribution"
  ) +
  theme_minimal(base_size = 13)
```
