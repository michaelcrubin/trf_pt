## Dilution Effect {#sec-energy-intro .unnumbered}

```{r}
#| echo: false
#| message: false
#| warning: false
library(here)
invisible(capture.output(source(here("scripts", "global.R"))))
invisible(capture.output(source(here("scripts", "helpers.R"))))

# prep data
x <- get_burn()
data <- get_damage_grid() %>% left_join(x) %>% replace_na(list(burn_cost = 0)) %>% 
  drop_na() %>%filter(burn_cost > 0.0)
below1<-  data %>%filter( burn_cost<0.01)



```

::: {.callout-tip title="Summary"}
We investigate whether the large number of small---but nonzero---burn cost values can be explained by a **dilution effect**. In other words, small burn costs may result when actual losses are spread over very large insured amounts or large geographic areas.
:::

A substantial fraction of burn costs falls between 0 % and 1 %. Such tiny damages seem unlikely as individual claims---few policyholders would report losses that small in isolation. We therefore hypothesize a *dilution effect*, meaning that real damage exists but gets "diluted" when spread across large sums insured or extensive geographic areas.

To test this hypothesis, we use two proxies for aggregation scale:

1.  **Sum insured**

2.  **Geographic area**

------------------------------------------------------------------------

### Dilution Effect on Sum Insured

First, we visualize the raw relationship between burn cost and sum insured. The scatterplot shows that there is no obvious linear correlation---this is expected, since both variables exhibit strong heteroskedasticity.


```{r, fig.height=7, fig.width=10}
#| warning: false
#| eval: true
#| echo: false
#| message: false

ggplot(data, aes(sum_insured, burn_cost)) +
  geom_point(color = "olivedrab", alpha = 0.3)+
  labs(title = "Burn x Sum insured")+
  theme_minimal(base_size = 13)
```

Next, we slice burn cost by quantiles of sum insured. In other words, we group policies into bins by sum insured and then compare the burn cost distributions within each bin. We choose five bins (quantiles at 20 %, 40 %, 60 %, 80 %, 100 %). We see that as the sum insured increases, the "center of mass" of the burn cost distribution shifts leftâ€”indicating smaller relative damages on larger policies.

```{r, fig.height=12, fig.width=10}
#| warning: false
#| eval: true
#| echo: false
#| message: false

qs <- quantile(data$sum_insured, probs = seq(0, 1, 0.2), na.rm = TRUE)
data %>% 
  dplyr::filter(burn_cost > 0) %>% 
  dplyr::mutate(quartile = (cut(sum_insured, breaks = qs, labels = paste("Sum insured on Q", names(qs)[-1]), include.lowest = TRUE))) %>%
  ggplot(aes(burn_cost)) +
  geom_histogram(aes(y = after_stat(density)),
                 bins = 100, fill = "olivedrab", alpha = 0.3) +
  facet_wrap(~ quartile, ncol = 1, scales = "free_y") +
  scale_x_continuous(limits = c(0, 1.01)) +
  labs(title = "Burn by Quntile of Sum insured",
       x = "burn", y = "cnt") +
  theme_minimal(base_size = 13)

```


To display this more succinctly, we use box plots of burn cost across deciles of sum insured. These **box plots confirm the trend**: burn cost tends to be lower (and more tightly clustered near zero) in the higher-insured groups.

```{r, fig.height=8, fig.width=10}
#| warning: false
#| eval: true
#| echo: false
#| message: false
qs <- quantile(data$sum_insured, probs = seq(0, 1, 0.1), na.rm = TRUE)
data %>% 
  filter(burn_cost > 0) %>% 
  mutate(quartile = cut(sum_insured,
                         breaks = qs,
                         labels = paste("Q", names(qs)[-1]),
                         include.lowest = TRUE)) %>%
  ggplot(aes(x = quartile, y = burn_cost)) +
  geom_boxplot(fill = "olivedrab3", color = "olivedrab", alpha = 0.6, outlier.size = 3) +
  scale_y_continuous(limits = c(0, 1.01)) +
  labs(
    title = "Dilution effect of Sum Insured on burn cost",
    x = "Sum insured Q",
    y = "Burn cost"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)
  )
```

------------------------------------------------------------------------

### Dilution Effect on Geographic Area

Next, we examine whether a similar dilution effect occurs when damage is spread over larger geographic areas. We merge our burn dataset with municipality area information and then plot burn cost versus area. As before, the scatterplot alone does not reveal a clear trend, due to heteroskedasticity.

```{r, fig.height=7, fig.width=10}
#| warning: false
#| eval: true
#| echo: false
#| message: false
# 
# area <- RnData::GET_geography("POR", "municipality", return = "sf") %>%
#   mutate(area = as.numeric(sf::st_area(geom))) %>% sf::st_drop_geometry() %>% dplyr::select(municipality_id, area)
area <- readRDS(here("DB", "meta", "portugal_continental_geography.rds"))%>% 
  mutate(area = as.numeric(sf::st_area(geom))) %>%
   sf::st_drop_geometry() %>%
  dplyr::select(municipality_id, area)

data_area <- data %>% drop_na() %>% filter(burn_cost > 0) %>% left_join(area) 
ggplot(data_area, aes(area, burn_cost)) +
  geom_point(color = "salmon", alpha = 0.3)+
  labs(title = "Burn x Sum insured")+
  theme_minimal(base_size = 13)

```


We then slice burn cost by quantiles of geographic area (again using five bins). The histograms show a shift toward lower burn costs as area increases, but this effect is much weaker than what we observed for sum insured.

```{r, fig.height=12, fig.width=10}
#| warning: false
#| eval: true
#| echo: false
#| message: false

qs <- quantile(data_area$area, probs = seq(0, 1, 0.2), na.rm = TRUE)
data_area %>% 
  filter(burn_cost > 0) %>% 
  mutate(quantile = (cut(area, breaks = qs, labels = paste("area Q", names(qs)[-1]), include.lowest = TRUE))) %>%
  ggplot(aes(burn_cost)) +
  geom_histogram(aes(y = after_stat(density)),
                 bins = 100, fill = "salmon", alpha = 0.3) +
  facet_wrap(~ quantile, ncol = 1, scales = "free_y") +
  scale_x_continuous(limits = c(0, 1.01)) +
  labs(title = "Burn distribution by quartile of area",
       x = "burn", y = "cnt") +
  theme_minimal(base_size = 13)

```


Box plots of burn cost by decile of area confirm the finding: there is only a slight tendency for burn cost to decrease as area grows. Overall, the dilution effect on area is negligible compared to the effect on sum insured.

```{r, fig.height=8, fig.width=10}
#| warning: false
#| eval: true
#| echo: false
#| message: false
qs <- quantile(data_area$area, probs = seq(0, 1, 0.1), na.rm = TRUE)
data_area %>% 
  filter(burn_cost > 0) %>% 
  mutate(quantile = cut(area,breaks = qs,labels = paste("Q", names(qs)[-1]),include.lowest = TRUE)) %>%
  ggplot(aes(x = quantile, y = burn_cost)) +
  geom_boxplot(fill = "salmon", color = "salmon3", alpha = 0.6, outlier.size = 3) +
  scale_y_continuous(limits = c(0, 1.01)) +
  labs(
    title = "Dilution effect of area on burn cost",
    x = "Area Q",
    y = "Burn cost"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

```

------------------------------------------------------------------------

### Results

::: {.callout-important title="Behavior of the Dilution Effect"}
There is a strong dilution effect with respect to **sum insured**, whereas the effect of **geographic area** is negligible or much weaker. We conclude that the clustering of burn cost values near zero primarily arises from dilution over large policy amounts, rather than being a natural effect. Now that we have established this dilution effect, we proceed to explore its statistical implications in the next chapter.
:::
